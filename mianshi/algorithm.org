* 归并排序
 1) 把长度为n的输入序列（如果n>=2）分成两个长度为n/2的子序列；
 2) 对这两个子序列分别采用归并排序；
 3) 将两个排序好的子序列合并成一个最终的排序序列。

* 插入排序
  1) 从无序队列中取出第一个放进有序队列中
  2) 从无序队列中取出下一个放进有序队列中合适的位置
  3) 重复2直到无序队列空

* 快速排序
  快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：

  1) 从数列中挑出一个元素，称为 "基准"（pivot）；
  2) 重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；
  3) 递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。

* 堆排序
  1) 将初始待排序关键字序列(R1,R2....Rn)构建成大顶堆，此堆为初始的无序区；
  2) 将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,......Rn-1)和新的有序区(Rn),且满足R[1,2...n-1]<=R[n]； 
  3) 由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,......Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2....Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。
